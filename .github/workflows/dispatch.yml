name: Manual workflow demo
on:
  workflow_dispatch:
  
jobs:
  create_release_linux:
    name: Create Release (Linux)
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release_linux.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release_linux
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME_LINUX: "1.0.0"
          RELEASE_NAME_LINUX: "HelloWorld-Go-Version-$TAG_NAME_LINUX"
        with:
          tag_name: "${TAG_NAME_LINUX}"
          release_name: "${RELEASE_NAME_LINUX}"
          body: |
            Changes in this release
            - Compiled Go file created in Ubuntu
          draft: false
          prerelease: false
  create_release_windows:
      name: Create Release (Windows)
      runs-on: windows-latest
      outputs:
        upload_url: ${{ steps.create_release_windows.outputs.upload_url }}
      steps:
      - name: Create Release
        id: create_release_windows
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME_WIDNOWS: "1.1.0"
          RELEASE_NAME_WINDOWS: "HelloWorld-Go-Version-${TAG_NAME_WINDOWS}"
        with:
          tag_name: "${TAG_NAME_WINDOWS}"
          release_name: "${RELEASE_NAME_WINDOWS}"
          body: |
            Changes in this release
            - Compiled Go file created in Windows
          draft: false
          prerelease: false
          
  release_assets:
    name: Release Assets
    needs: [create_release_linux, create_release_windows]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
          - os: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Go (Linux)
        if: ${{ matrix.config.os }} == ubuntu-latest
        run: 'echo "This is a test"'
        
      - name: Set up Go (Windows)
        if: ${{ matrix.config.os }} == windows-latest
        shell: powershell
        run: 'Write-Output "This is a test"'
