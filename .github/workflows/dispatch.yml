name: Manual workflow demo
on:
  workflow_dispatch:
  
jobs:
  create_release_linux:
    name: Create Release (Linux)
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release_linux.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release_linux
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME_LINUX: '1.0.0.L'
        with:
          tag_name: ${{ TAG_NAME_LINUX }}
          release_name: "HelloWorld Go Linux Version ${{ TAG_NAME_LINUX }}"
          body: |
            Changes in this release
            - Compiled Go file created in Ubuntu
          draft: false
          prerelease: false
  create_release_windows:
      name: Create Release (Windows)
      runs-on: windows-latest
      outputs:
        upload_url: ${{ steps.create_release_windows.outputs.upload_url }}
      steps:
      - name: Create Release
        id: create_release_windows
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: '1.0.0.W'
          release_name: "HelloWorld Go Windows Version 1.1.0"
          body: |
            Changes in this release
            - Compiled Go file created in Windows
          draft: false
          prerelease: false
          
  release_assets_linux:
    name: Release Assets (Linux)
    needs: create_release_linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Go (Linux)
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
        id: golin
        
      - name: Build
        run: go build -o helloworld -v
        
      - name: Test
        run: go test -v
        
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release_linux.outputs.upload_url }}
          asset_name: HelloWorld
          asset_path: ./helloworld
          asset_content_type: application/octet-stream
        
        
  release_assets_windows:
    name: Release Assets (Windows)
    needs: create_release_windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Go (Windows)
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
        id: gowin

      - name: Build
        run: go build -o helloworld -v
        
      - name: Test
        run: go test -v
        
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release_windows.outputs.upload_url }}
          asset_name: HelloWorld.exe
          asset_path: ./helloworld
          asset_content_type: application/octet-stream
